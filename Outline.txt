Programming Course
Day 1
Road map of the course.
What are front-end and back-end ?
What will be the editor and development environment?
Start with HTML.
HTML Elements
1. Starting tag
2. Ending tag
3. Content between tags
Doctype
1. What are doctypes?
2. What doctype is used for in HTML?
Fundamental HTML Tags:
1. HTML tag
2. Head tag
3. Title tag
4. Body tag
Headings
1. How to create a heading in HTML?
2. How many headings are in HTML?
3. Why headings are essential for SEO?
4. Where not to use headings?
Paragraphs
1. <p> - creates paragraphs.
2. Use <hr> tag in paragraphs.
3. Use <br> tag in paragraphs.
4. Use of <pre> tag.
Text Formatting
1. <b> - Bold text
2. <strong> - Important text
3. <i> - Italic text
4. <em> - Emphasized text
5. <u> - Underline text
6. <ins> - Inserted text
7. <sub> - Subscript text
8. <sup> - Superscript text
9. <small> - Smaller text
10. <big> - Bigger text
11. <mark> - Marked text
12. <del> - Deleted text
Comments
1. <!-- - Starting tag of comment.
2. --> - Ending tag of comment.
3. How to add comments inside a paragraph & why?
Day 2
HTML Attributes
1. What are HTML attributes?
Anchors and Hyperlinks
1. <a> - link tag.
2. href - link to.
3. target - where to open the linked document.
4. _self - Default. Opens the document in the same window/tab as it was clicked.
5. _blank - Opens the document in a new window or tab.
6. Use mailto: inside the href.
7. Use tel: inside the href.
Lists
1. <ul> - unordered list.
2. <li> - list item.
3. <ol> - order list.
4. <dl> - description list.
5. <dt> - defines the term.
6. <dd> - tag describes each term.
Images
1. <img> - element to define an image.
2. src - attribute to define the URL of the image.
3. alt - attribute to define an alternate text for an image, if it cannot be displayed.
4. width and height - attributes to define the size of the image.
5. float - property to let the image float to the left or the right.
6. <picture> - element gives web developers more flexibility in specifying image resources.
7. Why not use large images on web pages?
Day 3
Tables
1. <table> - Defines a table.
2. <tr> - Defines a row in a table.
3. <th> - Defines a header cell in a table.
4. <td> - Defines a cell table.
5. <caption> - Defines a table caption.
6. <colgroup> - Specifies a group of one or more columns in a table for formatting.
7. <col> - Specifies column properties for each column within a <colgroup> element.
8. <thead> - Groups the header content in a table.
9. <tbody> - Groups the body content in a table.
10. <tfoot> - Groups the footer content in a table.
Day 4
Forms
1. <form> - element is used to create an HTML form for user input.
2. <input> - element is the most used form element.
3. <input> element can be displayed in many ways, depending on the type attribute.
4. <input type="text"> - Displays a single-line text input field.
5. <input type="radio"> - Displays a radio button (for selecting one of many choices).
6. <input type="checkbox"> - Displays a checkbox (for selecting zero or more of many
choices).
7. <input type="submit"> - Displays a submit button (for submitting the form).
8. <input type="button"> - Displays a clickable button.
9. <label> - tag defines a label for many form elements.
10. <textarea> - Defines a multiline input control (text area).
11. <select> - Defines a drop-down list.
12. <option> - Defines an option in a drop-down list.
13. <optgroup> - Defines a group of related options in a drop-down list.
14. <button> - Defines a clickable button.
15. <fieldset> - Groups related elements in a form.
16. <legend> - Defines a caption for a <fieldset> element.
17. <datalist> - Specifies a list of pre-defined options for input controls.
18. <output> - Defines the result of a calculation.
19. for - attribute of the <label> tag.
20. action - attribute defines the action to be performed when the form is submitted.
21. target - works the same as <a> attribute target.
22. method - attribute specifies the HTTP method for submitting the form data. (GET or
POST more on that later).
23. autocomplete - attribute specifies whether a form should have to autocomplete on or off.
24. novalidate - form attribute when present, specifies that the form-data (input) should not
be validated when submitted.
25. selected - attribute to the option element.
26. multiple - attribute to the option element.
Different attributes for the HTML <input> element.
1. value - attribute specifies an initial value for an input field.
2. readonly - attribute specifies that an input field is read-only.
3. disabled - attribute specifies that an input field should be disabled.
4. size - attribute specifies the visible width, in characters, of an input field.
5. maxlenght - attribute specifies the maximum number of characters allowed in an input
field.
6. min and max attributes specify the minimum and maximum values for an input field.
7. multiple - attribute specifies that the user can enter more than one value in an input field.
8. pattern - attribute specifies a regular expression that the input field's value is checked
against when the form is submitted.
9. placeholder - attribute specifies a short hint that describes the expected value of an input
field (a sample value or a short description of the expected format).
10. required - attribute specifies that an input field must be filled out before submitting the
form.
11. step - attribute specifies the legal number intervals for an input field.
12. autofocus - attribute specifies that an input field should automatically get focused when
the page loads.
Day 5
Div Element
1. <div> - tag defines a division or a section in an HTML document.
2. <div> - tag is used as a container for HTML elements
3. <div> - tag is easily styled using the class or id attribute.
4. Any sort of content can be put inside the <div> tag!
Sectioning Elements
1. What are sectioning elements?
2. <article> - Defines independent, self-contained content.
3. <aside> - Defines content aside from the page content.
4. <details> - Defines additional details that the user can view or hide.
5. <figcaption> - Defines a caption for a <figure> element.
6. <figure> - Specifies self-contained content, like illustrations, diagrams, photos, code
listings, etc.
7. <footer> - Defines a footer for a document or section.
8. <header> - Specifies a header for a document or section
9. <main> - Specifies the main content of a document.
10. <mark> - Defines marked/highlighted text.
11. <nav> - Defines navigation links.
12. <section> - Defines a section in a document.
13. <summary> - Defines a visible heading for a <details> element.
14. <time> - Defines a date/time.
Meta Information
1. <meta> - tag defines metadata about an HTML document.
2. Why do we use meta tags?
3. <meta> tag has the following attributes.
4. charset - specifies the character encoding for the HTML document.
5. content - Specifies the value associated with the http-equiv or name attribute.
6. http-equiv - Provides an HTTP header for the information/value of the content attribute.
7. name - Specifies a name for the metadata.
8. The name attribute has the following properties.
9. keywords, description, author, refresh, viewport.
CSS Basics
1. What is CSS?
2. CSS Syntax.
3. CSS Selectors.
4. How to add CSS?
5. CSS comments
6. CSS selectors precedence.
7. What is important?
Text Formatting
1. Text Alignment
1.1. text-align
1.2. text-align-last
2. Text Colors
2.1. color
3. Text Decoration
3.1. text-decoration-line
3.2. text-decoration-color
3.3. text-decoration-style
3.4. text-decoration-thickness
3.5. text-decoration
4. Text Transformation
4.1. text-transform
5. Text Spacing
5.1. text-indent
5.2. letter-spacing
5.3. line-height
5.4. word-spacing
5.5. white-space
6. Text Shadow
6.1. text-shadow
Day 6
CSS Font
1. Family
1.1. font-family
2. Size
2.1. font-size
3. Style
3.1. font-style
4. Weight
4.1. font-weight
Box Model
1. CSS Border.
2. CSS Margins.
3. CSS Padding.
4. CSS Height and Width.
5. CSS Box Shadow.
Day 7
CSS Backgrounds
1. Background color
2. Background image
3. Properties:
3.1. background-color
3.2. background-image
3.3. background-size
3.4. background-repeat
3.5. background-position
3.6. background-clip
CSS Layout
1. CSS Overflow.
2. CSS Units.
2.1. px
2.2. em
2.3. rem
2.4. vh
2.5. vw
2.6. %
Day 8
CSS Layout
1. CSS Position
1.1. Static Position
1.2. Relative Position
1.3. Fixed Position
1.4. Absolute Position
1.5. Sticky Position
2. CSS Z-index.
Day 9
CSS Layout
1. CSS Display
1.1. Inline
1.2. Block
1.3. Inline-block
1.4. None
2. CSS Visibility
2.1. Visibile
2.2. Hidden
Day 10
CSS Flexbox
1. What is CSS Flexbox?
2. What are flex components?
3. Flex container properties.
3.1. flex-direction
3.2. flex-wrap
3.3. flex-flow
3.4. justify-content
3.5. align-items
3.6. align-content
4. Flex item properties.
4.1. order
4.2. flex-grow
4.3. flex-shrink
4.4. flex-basis
4.5. flex
4.6. align-self
Day 11
CSS Grid
5. What is CSS Grid?
6. What is the difference between grid and flex?
7. What are grid components?
8. Grid container properties.
8.1. grid-template-columns
8.1.1. px, fr, auto
8.1.2. repeat(), minmax(), auto-fit
8.2. grid-template-rows
8.2.1. px, auto
8.3. grid-auto-columns
8.4. grid-auto-rows
8.5. column-gap
8.6. row-gap
8.7. gap
8.8. justify-content
8.9. align-content
8.10. grid-template-area
9. Grid item properties.
9.1. grid-column-start
9.2. grid-column-end
9.3. grid-column
9.4. grid-row-start
9.5. grid-row-end
9.6. grid-row
9.7. grid-Area
Day 12
CSS Media Queries
1. What is responsive web design?
2. What are media queries?
3. Why are media queries used?
4. What are media query breakpoints?
5. Typical media query breakpoints
5.1. @media only screen and (max-width: 600px) [Extra small devices (phones, 600px
and down)]
5.2. @media only screen and (min-width: 600px) [Small devices (portrait tablets and
large phones, 600px and up)]
5.3. @media only screen and (min-width: 768px) [Medium devices (landscape tablets,
768px and up)]
5.4. @media only screen and (min-width: 992px) [Large devices (laptops/desktops,
992px and up)]
5.5. @media only screen and (min-width: 1200px) [Extra large devices (large laptops
and desktops, 1200px and up)]
Day 13
Final Project: Create a fully responsive page using HTML and CSS.
Day 14
Getting Started with JavaScript
1. What is JavaScript?
2. What can you do using JavaScript?
3. What is the difference between JavaScript and HTML?
4. Different ways of using JavaScript with HTML?
5. What are JavaScript comments?
6. What are the different data types?
6.1. String
6.2. Integer
6.3. Float
6.4. Boolean
6.5. list
7. What are variables?
8. Different ways to print values in JavaScript.
8.1. console.log()
8.2. alert()
8.3. document.write()
9. What are JavaScript assignment operators?
10. What are arithmetic operators?
Task
1. Find the area of a rectangle where the length is 5 and the width is 8.
2. Find the area of a triangle where the base is 4 and the height is 3.
3. Find the area of a circle where the radius is 3.
4. Convert temperatures from Celsius to Fahrenheit and Fahrenheit to Celsius.
Day 15
JavaScript Conditional Operators
1. < less than
2. > greater than
3. <= less than or equal to
4. >= greater than or equal to
5. == equal to
6. === identical to
7. != not equal to
8. !== not identical to
JavaScript Logical Operators
1. && AND
2. || OR
3. ! NOT
JavaScript Conditional Statement
1. Use if to specify a block of code to be executed, if a specified condition is true.
2. Use else to specify a block of code to be executed if the same condition is false.
3. Use else if to specify a new condition to test, if the first condition is false.
Task
1. Check two given numbers and return true if one of the numbers is 50 or if their sum is 50.
2. Check from the given integer, whether it is positive or negative.
3. Check whether a given number is even or odd.
4. Check whether a given positive number is a multiple of 3.
5. Determine whether a given year is a leap year.
